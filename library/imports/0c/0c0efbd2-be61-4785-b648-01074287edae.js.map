{"version":3,"sources":["assets\\scripts\\Player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","repeatForever","sequence","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","jumpAction","node","runAction","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestroy","off","getPlayerDistance","playerPos","game","player","getPosition","dist","position","sub","mag","onPicked","spawnNewStar","destroy","start","update","dt","Math","abs","x","pickRadius"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n    },\r\n    setJumpAction: function () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // 不断重复\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\r\n    },\r\n    onKeyDown (event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break;\r\n        }\r\n    },\r\n\r\n    onKeyUp (event) {\r\n        // unset a flag when key released\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break;\r\n        }\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n\r\n        // 初始化键盘输入监听\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);   \r\n    },\r\n    onDestroy () {\r\n        // 取消键盘输入监听\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n    getPlayerDistance: function () {\r\n        // 根据 player 节点位置判断距离\r\n        var playerPos = this.game.player.getPosition();\r\n        // 根据两点位置计算两点之间距离\r\n        var dist = this.node.position.sub(playerPos).mag();\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function() {\r\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        // 然后销毁当前星星节点\r\n        this.node.destroy();\r\n    },\r\n    start () {\r\n\r\n    },\r\n    //  update 会每帧调用一次\r\n    update (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n         // 每帧判断和主角之间的距离是否小于收集距离\r\n         if (this.getPlayerDistance() < this.pickRadius) {\r\n            // 调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n    },\r\n});\r\n"]}